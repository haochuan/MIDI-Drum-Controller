// vectors.srp -- some vector arithmetic

def vec_diff(x, y)
    var n = len(x)
    if n != len(y)
       return nil
    var z = array(n)
    for i = 0 to n
        z[i] = x[i] - y[i]
    return z

def vec_sum_elements(x)
    var n = len(x)
    var sum = 0
    for i = 0 to n
        sum = sum + x[i]
    return sum

def vec_square(x)
    var n = len(x)
    var y = array(n)
    for i = 0 to n
        var elem = x[i]
        y[i] = elem * elem
    return y


def vec_mean(x)
    vec_sum_elements(x) / len(x)
    

def vec_sum(x, y)
    var n = len(x)
    if n != len(y)
       return nil
    var z = array(n)
    for i = 0 to n
        z[i] = x[i] + y[i]
    return z

def vec_offset(x, y)
    var n = len(x)
    var z = array(n)
    for i = 0 to n
        z[i] = x[i] + y
    return z

def vec_prod(x, y)
    var n = len(x)
    if n != len(y)
       return nil
    var z = array(n)
    for i = 0 to n
        z[i] = x[i] * y[i]
    return z

def vec_norm(x) // also Euclidean distance
    sqrt(real(vec_sum_elements(vec_square(x))))

def vec_zeros(n)
    var v = array(n)
    for i = 0 to n
        v[i] = 0
    return v

